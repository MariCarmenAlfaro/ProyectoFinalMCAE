{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet GestionComponent = class GestionComponent {\n  constructor() {\n    this.password = '';\n  }\n  ngOnInit() {}\n  generatePassword() {\n    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    const passwordLength = 8;\n    for (let i = 0; i < passwordLength; i++) {\n      const randomIndex = Math.floor(Math.random() * chars.length);\n      this.password += chars[randomIndex];\n    }\n    return this.password;\n  }\n};\nGestionComponent = __decorate([Component({\n  selector: 'app-gestion',\n  templateUrl: './gestion.component.html',\n  styleUrls: ['./gestion.component.scss']\n})], GestionComponent);\nexport { GestionComponent };\n// ...\n//Esto es para que si a la hora de insertar se viola la resticcion del correo devuelva un fallo y q muestre mensajito\n// createUserProfile(userProfile: UserProfile): Observable<boolean> {\n//   const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//   const options = { headers: headers };\n//   return this.http.post<boolean>(`${this.apiUrl}/create`, userProfile, options).pipe(\n//     catchError(error => {\n//       if (error.status === 422) {\n//         const errorMessage = error.error.message;\n//         if (errorMessage.includes(\"ck_emailAddress\")) {\n//           // El error se debe a la restricción de verificación ck_emailAddress\n//           return of(false); // Devuelve un observable de \"false\" para indicar que la creación falló\n//         }\n//       }\n//       // Si no es un error de restricción de verificación ck_emailAddress, propaga el error\n//       throw error;\n//     })\n//   );\n// }","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}