{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ConfirmationService, MessageService, ConfirmEventType } from 'primeng/api';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet CaballoComponent = class CaballoComponent {\n  constructor(caballosService, confirmationService, messageService) {\n    this.caballosService = caballosService;\n    this.confirmationService = confirmationService;\n    this.messageService = messageService;\n    this.createNewHorse = false;\n    this.showDialog = false;\n    this.horses = [];\n    this.currentHorse = null;\n  }\n  ngOnInit() {\n    this.getAllHorses();\n  }\n  updateHorse() {\n    if (this.createNewHorse) {\n      this.form.controls.tipo.setValue(\"Clase\");\n    }\n    console.log(\" caballo guardado \" + this.form.value);\n    //TODO llamada al back\n  }\n\n  createForm(horse) {\n    if (horse) {\n      this.createNewHorse = false;\n      this.form = new FormGroup({\n        barnNum: new FormControl(horse.barnNum),\n        cameraUrl: new FormControl(horse.cameraUrl),\n        foodType: new FormControl(horse.foodType),\n        horseId: new FormControl(horse.horseId),\n        horseName: new FormControl(horse.horseName),\n        horseType: new FormControl(horse.horseType),\n        observation: new FormControl(horse.observation),\n        ownerId: new FormControl(horse.ownerId),\n        registrationDate: new FormControl(horse.registrationDate)\n      });\n    } else {\n      this.createNewHorse = true;\n      this.form = new FormGroup({\n        barnNum: new FormControl(''),\n        cameraUrl: new FormControl(''),\n        foodType: new FormControl(''),\n        horseId: new FormControl(''),\n        horseName: new FormControl(''),\n        horseType: new FormControl(''),\n        observation: new FormControl(''),\n        ownerId: new FormControl(''),\n        registrationDate: new FormControl(null)\n      });\n      this.currentHorse = true;\n    }\n    this.showDialog = true;\n    console.log(this.form);\n  }\n  getAllHorses() {\n    this.caballosService.getAllHorses().subscribe(response => {\n      this.horses = response;\n      console.log(response);\n    }, error => {\n      console.error(error);\n      //this.errorMessage=true;\n    });\n  }\n\n  selectHorse(horse) {\n    this.currentHorse = horse;\n    console.log(this.currentHorse);\n    this.createForm(horse);\n  }\n  deleteHorse(horseId) {\n    this.caballosService.deleteHorse(horseId).subscribe(response => {\n      if (response === true) {\n        this.getAllHorses();\n        this.messageService.add({\n          severity: 'info',\n          summary: 'Confirmed',\n          detail: 'Caballo eliminado correctamente'\n        });\n      } else {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Rejected',\n          detail: 'Error al intentar borrar el caballo'\n        });\n      }\n    }, error => {\n      console.error(error);\n      //this.errorMessage=true;\n    });\n  }\n\n  deleteHorseDialog(horseId) {\n    //TODO meter un cargando\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to proceed?',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.deleteHorse(horseId);\n      },\n      reject: type => {\n        switch (type) {\n          case ConfirmEventType.REJECT:\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Rejected',\n              detail: 'You have rejected'\n            });\n            break;\n          case ConfirmEventType.CANCEL:\n            this.messageService.add({\n              severity: 'warn',\n              summary: 'Cancelled',\n              detail: 'You have cancelled'\n            });\n            break;\n        }\n      }\n    });\n  }\n};\nCaballoComponent = __decorate([Component({\n  selector: 'app-caballo',\n  templateUrl: './caballo.component.html',\n  styleUrls: ['./caballo.component.scss'],\n  providers: [ConfirmationService, MessageService]\n})], CaballoComponent);\nexport { CaballoComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}